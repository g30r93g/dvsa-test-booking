{
  "id": "63ca4215-6518-4fd5-ba7c-8b9767cb2fdf",
  "prevId": "0773b88b-47f1-4ff5-bcee-172a0f33fa85",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.booking_approvals": {
      "name": "booking_approvals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "booking_id": {
          "name": "booking_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "is_approved": {
          "name": "is_approved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "learner_id": {
          "name": "learner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "learner_approved_at": {
          "name": "learner_approved_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "instructor_id": {
          "name": "instructor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "instructor_approved_at": {
          "name": "instructor_approved_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "booking_approvals_booking_id_bookings_id_fk": {
          "name": "booking_approvals_booking_id_bookings_id_fk",
          "tableFrom": "booking_approvals",
          "tableTo": "bookings",
          "columnsFrom": [
            "booking_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "booking_approvals_learner_id_learners_id_fk": {
          "name": "booking_approvals_learner_id_learners_id_fk",
          "tableFrom": "booking_approvals",
          "tableTo": "learners",
          "columnsFrom": [
            "learner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "booking_approvals_instructor_id_instructors_id_fk": {
          "name": "booking_approvals_instructor_id_instructors_id_fk",
          "tableFrom": "booking_approvals",
          "tableTo": "instructors",
          "columnsFrom": [
            "instructor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.bookings": {
      "name": "bookings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "booked_by_type": {
          "name": "booked_by_type",
          "type": "booked_by",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "booked_by_id": {
          "name": "booked_by_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "slot_id": {
          "name": "slot_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "learner_id": {
          "name": "learner_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bookings_slot_id_slots_id_fk": {
          "name": "bookings_slot_id_slots_id_fk",
          "tableFrom": "bookings",
          "tableTo": "slots",
          "columnsFrom": [
            "slot_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "bookings_learner_id_learners_id_fk": {
          "name": "bookings_learner_id_learners_id_fk",
          "tableFrom": "bookings",
          "tableTo": "learners",
          "columnsFrom": [
            "learner_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.instructors": {
      "name": "instructors",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "adi_number": {
          "name": "adi_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.instructor_students": {
      "name": "instructor_students",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "instructor_id": {
          "name": "instructor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "instructor_students_instructor_id_instructors_id_fk": {
          "name": "instructor_students_instructor_id_instructors_id_fk",
          "tableFrom": "instructor_students",
          "tableTo": "instructors",
          "columnsFrom": [
            "instructor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "instructor_students_student_id_learners_id_fk": {
          "name": "instructor_students_student_id_learners_id_fk",
          "tableFrom": "instructor_students",
          "tableTo": "learners",
          "columnsFrom": [
            "student_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.learners": {
      "name": "learners",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "driving_licence_number": {
          "name": "driving_licence_number",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "theory_test_number": {
          "name": "theory_test_number",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.slots": {
      "name": "slots",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "test_type": {
          "name": "test_type",
          "type": "test_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "venue": {
          "name": "venue",
          "type": "venue",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "bookable_from": {
          "name": "bookable_from",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "is_cancellation": {
          "name": "is_cancellation",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "start_time": {
          "name": "start_time",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "end_time": {
          "name": "end_time",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.booked_by": {
      "name": "booked_by",
      "schema": "public",
      "values": [
        "learner",
        "instructor"
      ]
    },
    "public.test_type": {
      "name": "test_type",
      "schema": "public",
      "values": [
        "theory-car",
        "practical-car-manual",
        "practical-car-automatic",
        "practical-motorcycle-a1-mod1",
        "practical-motorcycle-a1-mod2",
        "practical-motorcycle-a2-mod1",
        "practical-motorcycle-a2-mod2",
        "practical-motorcycle-a-unrestricted-mod1",
        "practical-motorcycle-a-unrestricted-mod2",
        "practical-motorcycle-am-moped-mod1",
        "practical-motorcycle-am-moped-mod2",
        "practical-lorry-c1-offroad",
        "practical-lorry-c1-onroad",
        "practical-lorry-c1e-offroad",
        "practical-lorry-c1e-onroad",
        "practical-lorry-c-offroad",
        "practical-lorry-c-onroad",
        "practical-lorry-c-e-offroad",
        "practical-lorry-c-e-onroad",
        "practical-lorry-cpc",
        "practical-bus-d1-offroad",
        "practical-bus-d1-onroad",
        "practical-bus-d1e-offroad",
        "practical-bus-d1e-onroad",
        "practical-bus-d-offroad",
        "practical-bus-d-onroad",
        "practical-bus-de-offroad",
        "practical-bus-de-onroad",
        "practical-bus-cpc",
        "practical-adipart2",
        "practical-adipart3",
        "practical-adistandardscheck",
        "practical-agricultural",
        "practical-road-roller",
        "practical-tracked-vehicle",
        "practical-pedestrian-controlled-vehicle"
      ]
    },
    "public.venue": {
      "name": "venue",
      "schema": "public",
      "values": [
        "Aberdeen North LGV",
        "Aberdeen South (Cove)",
        "Aberfeldy",
        "Abergavenny",
        "Aberystwyth (Park Avenue)",
        "Airdrie",
        "Alness",
        "Alnwick",
        "Arbroath",
        "Ashfield",
        "Ashford (Kent)",
        "Atherton (Manchester)",
        "Aylesbury",
        "Ayr",
        "Bala",
        "Ballater",
        "Banbury",
        "Banff",
        "Bangor",
        "Barking (Tanner Street)",
        "Barnet (London)",
        "Barnsley",
        "Barnstaple",
        "Barra",
        "Barrow In Furness",
        "Barry",
        "Basildon",
        "Basingstoke",
        "Bedford",
        "Belvedere (London)",
        "Benbecula Island",
        "Berwick-On-Tweed",
        "Beverley LGV",
        "Birmingham (Garretts Green)",
        "Birmingham (Kings Heath)",
        "Birmingham (Kingstanding)",
        "Birmingham (Shirley)",
        "Birmingham (South Yardley)",
        "Bishopbriggs",
        "Bishops Stortford",
        "Blackburn with Darwen",
        "Blackpool",
        "Bletchley",
        "Blyth",
        "Bodmin",
        "Bolton (Manchester)",
        "Borehamwood (London)",
        "Boston",
        "Bradford (Heaton)",
        "Bradford (Thornbury)",
        "Brecon",
        "Bredbury (Manchester)",
        "Brentwood (London)",
        "Bridgend",
        "Bridlington",
        "Bristol (Avonmouth)",
        "Bristol (Kingswood)",
        "Brodick (Isle of Arran)",
        "Bromley (London)",
        "Buckie",
        "Burgess Hill",
        "Burton on Trent",
        "Bury (Manchester)",
        "Bury St Edmunds",
        "Buxton",
        "Callander",
        "Camborne",
        "Cambridge (Brookmount Court)",
        "Campbeltown",
        "Canterbury",
        "Cardiff (Llanishen)",
        "Cardigan",
        "Carlisle",
        "Carlisle LGV (Cars)",
        "Carmarthen",
        "Castle Douglas",
        "Chadderton",
        "Cheetham Hill (Manchester)",
        "Chelmsford (Hanbury Road)",
        "Cheltenham",
        "Chertsey (London)",
        "Chester",
        "Chesterfield",
        "Chichester",
        "Chingford (London)",
        "Chippenham",
        "Chorley",
        "Clacton-on-Sea",
        "Colchester",
        "Coventry",
        "Crawley",
        "Crewe",
        "Crieff",
        "Cumnock",
        "Darlington",
        "Derby (Alvaston)",
        "Doncaster",
        "Dorchester",
        "Dudley",
        "Dumbarton",
        "Dumfries",
        "Dundee",
        "Dunfermline (Vine)",
        "Dunoon",
        "Duns",
        "Durham",
        "East Kilbride",
        "Eastbourne",
        "Edinburgh (Currie)",
        "Edinburgh (Musselburgh)",
        "Elgin",
        "Enfield (Brancroft Way)",
        "Enfield (Innova Business Park)",
        "Erith (London)",
        "Exeter",
        "Exeter LGV",
        "Farnborough",
        "Featherstone",
        "Folkestone",
        "Forfar",
        "Fort William",
        "Fraserburgh",
        "Gairloch",
        "Galashiels",
        "Gateshead",
        "Gillingham",
        "Girvan",
        "Glasgow (Anniesland)",
        "Glasgow (Baillieston)",
        "Glasgow (Shieldhall)",
        "Gloucester",
        "Golspie",
        "Goodmayes (London)",
        "Gosforth",
        "Grangemouth",
        "Grantham (Somerby)",
        "Grantown-On-Spey",
        "Greenford (Horsenden Lane)",
        "Greenham",
        "Greenock",
        "Grimsby Coldwater",
        "Guildford",
        "Haddington",
        "Halifax",
        "Hamilton",
        "Hartlepool",
        "Hastings (Ore)",
        "Hawick",
        "Heckmondwike",
        "Hendon (London)",
        "Hereford",
        "Herne Bay",
        "Hexham",
        "Heysham",
        "High Wycombe",
        "Hinckley",
        "Hither Green (London)",
        "Hornchurch (London)",
        "Horsforth",
        "Huddersfield",
        "Hull",
        "Huntly",
        "Inveraray",
        "Inverness (Longman Drive)",
        "Inverurie",
        "Ipswich",
        "Irvine",
        "Islay Island",
        "Isle of Mull",
        "Isle of Skye (Portree)",
        "Isle of Tiree",
        "Isles of Scilly",
        "Isleworth (Fleming Way)",
        "Kelso",
        "Kendal (Oxenholme Road)",
        "Kettering",
        "Kings Lynn",
        "Kingussie",
        "Kirkcaldy",
        "Knaresborough",
        "Kyle of Lochalsh",
        "Lanark",
        "Launceston",
        "Lee On The Solent",
        "Leeds",
        "Leicester (Cannock Street)",
        "Leicester (Wigston)",
        "Leighton Buzzard (Stanbridge Road)",
        "Lerwick",
        "Letchworth",
        "Lichfield",
        "Lincoln",
        "Livingston",
        "Llanelli",
        "Llantrisant",
        "Lochgilphead",
        "Loughborough",
        "Loughton (London)",
        "Louth",
        "Lowestoft(Mobbs Way)",
        "Ludlow",
        "Luton",
        "Macclesfield",
        "Maidstone",
        "Mallaig",
        "Malton",
        "Melton Mowbray",
        "Merthyr Tydfil",
        "Middlesbrough",
        "Mill Hill (London)",
        "Mitcham (London)",
        "Monmouth",
        "Montrose",
        "Morden (London)",
        "Nelson",
        "Newport (Gwent)",
        "Newport (Isle of Wight)",
        "Newton Abbot",
        "Newton Stewart",
        "Newtown",
        "Norris Green (Liverpool)",
        "Northallerton",
        "Northampton",
        "Northwich",
        "Norwich (Jupiter Road)",
        "Norwich (Peachman Way)",
        "Nottingham (Chilwell)",
        "Nottingham (Colwick)",
        "Nuneaton",
        "Oban",
        "Orkney",
        "Oswestry",
        "Oxford (Cowley)",
        "Paisley",
        "Peebles",
        "Pembroke Dock",
        "Penzance",
        "Perth (Arran Road)",
        "Peterborough",
        "Peterhead",
        "Pinner (London)",
        "Pitlochry",
        "Plymouth",
        "Plymouth LGV",
        "Pontefract",
        "Poole",
        "Portsmouth",
        "Preston",
        "Pwllheli",
        "Reading",
        "Redditch",
        "Redhill Aerodrome",
        "Rhyl",
        "Rochdale (Manchester)",
        "Rotherham",
        "Rothesay",
        "Rugby",
        "Sale (Manchester)",
        "Salisbury",
        "Scarborough",
        "Scunthorpe",
        "Sevenoaks",
        "Sheffield (Handsworth)",
        "Sheffield (Middlewood Road)",
        "Shrewsbury",
        "Sidcup (London)",
        "Skegness",
        "Skipton",
        "Slough (London)",
        "Southall (London)",
        "Southampton (Maybush)",
        "Southend-on-Sea",
        "Southport (Liverpool)",
        "Speke (Liverpool)",
        "St Albans",
        "St Helens (Liverpool)",
        "Stafford",
        "Steeton",
        "Stevenage",
        "Stirling",
        "Stoke-On-Trent (Cobridge)",
        "Stoke-on-Trent (Newcastle-Under-Lyme)",
        "Stornoway",
        "Stranraer",
        "Sunderland",
        "Swansea",
        "Swindon",
        "Taunton",
        "Telford",
        "Thurso",
        "Tilbury",
        "Tolworth (London)",
        "Tottenham",
        "Trowbridge",
        "Tunbridge Wells",
        "Ullapool",
        "Upton",
        "Uxbridge (London)",
        "Wakefield",
        "Wallasey",
        "Walton LGV",
        "Wanstead (London)",
        "Warrington",
        "Warwick (Wedgenock House)",
        "Watford",
        "Watnall",
        "Wednesbury",
        "Wellingborough",
        "West Didsbury (Manchester)",
        "West Wickham (London)",
        "Weston-super-Mare",
        "Whitby",
        "Wick",
        "Widnes",
        "Winchester",
        "Wolverhampton",
        "Wood Green (London)",
        "Worcester",
        "Workington",
        "Worksop",
        "Worthing",
        "Wrexham",
        "Yeading (London)",
        "Yeovil",
        "York"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}